# Generated by Django 4.2.7 on 2025-07-30 13:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mymi_data', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='exploration',
            name='annotation_groups_raw',
            field=models.JSONField(blank=True, help_text='Raw API response from /annotation/annotation-group endpoint', null=True),
        ),
        migrations.AddField(
            model_name='exploration',
            name='annotations_raw',
            field=models.JSONField(blank=True, help_text='Raw API response from /annotation/annotation endpoint', null=True),
        ),
        migrations.CreateModel(
            name='AnnotationGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('tagid', models.IntegerField()),
                ('tagname', models.CharField(blank=True, max_length=255)),
                ('revision', models.CharField(blank=True, max_length=20)),
                ('taggroup', models.CharField(blank=True, max_length=255)),
                ('taglabel', models.CharField(blank=True, max_length=255)),
                ('tagdescription', models.TextField(blank=True)),
                ('creator_id', models.IntegerField(default=0)),
                ('displaystyle', models.JSONField(blank=True, null=True)),
                ('exploration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotation_groups', to='mymi_data.exploration')),
            ],
            options={
                'verbose_name': 'Annotation Group',
                'verbose_name_plural': 'Annotation Groups',
                'unique_together': {('id', 'exploration')},
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('annotationid', models.IntegerField()),
                ('annotationname', models.CharField(blank=True, max_length=500)),
                ('annotationdescription', models.TextField(blank=True)),
                ('show', models.BooleanField(default=True)),
                ('version', models.IntegerField(default=1)),
                ('revision', models.CharField(blank=True, max_length=20)),
                ('type', models.IntegerField(help_text='Annotation geometry type (e.g., 3=polygon, 100=line, 101=point)')),
                ('coord_xmin', models.IntegerField(default=0)),
                ('coord_xmax', models.IntegerField(default=0)),
                ('coord_ymin', models.IntegerField(default=0)),
                ('coord_ymax', models.IntegerField(default=0)),
                ('coord_zmin', models.IntegerField(default=0)),
                ('coord_zmax', models.IntegerField(default=0)),
                ('coord_tmin', models.IntegerField(default=0)),
                ('coord_tmax', models.IntegerField(default=0)),
                ('geometry', models.JSONField(default=list, help_text='Array of coordinate pairs')),
                ('rotation', models.FloatField(default=0)),
                ('displaystyle', models.JSONField(blank=True, null=True)),
                ('tag_ids', models.JSONField(default=list, help_text='Array of associated tag IDs')),
                ('channels', models.JSONField(default=list)),
                ('scope_id', models.IntegerField(default=0)),
                ('creator_id', models.IntegerField(default=0)),
                ('mousebinded', models.BooleanField(default=False)),
                ('tagdescription', models.TextField(blank=True)),
                ('typespecificflags', models.TextField(blank=True)),
                ('exploration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='mymi_data.exploration')),
            ],
            options={
                'verbose_name': 'Annotation',
                'verbose_name_plural': 'Annotations',
                'unique_together': {('id', 'exploration')},
            },
        ),
    ]
